//@version=5
indicator("Selectable Multi-TF High/Low Lines (Origin Bars)", overlay=true, dynamic_requests=true)

// === 表示ON/OFF トグル ===
show_12M = input.bool(false, "12 Months",  group="表示トグル")
show_1M  = input.bool(false, "1 Month",    group="表示トグル")
show_1W  = input.bool(false, "1 Week",     group="表示トグル")
show_1D  = input.bool(false, "1 Day",      group="表示トグル")
show_4H  = input.bool(false, "4 Hours",    group="表示トグル")
show_1H  = input.bool(false, "1 Hour",     group="表示トグル")
show_15m = input.bool(false, "15 Minutes", group="表示トグル")
show_5m  = input.bool(false, "5 Minutes",  group="表示トグル")
show_1m  = input.bool(true,  "1 Minute",   group="表示トグル")

// === 過去バー数設定 ===
ph12 = input.int(20, "12M: Past High Bars", group="過去バー数")
pl12 = input.int(20, "12M: Past Low Bars",  group="過去バー数")
ph1M = input.int(20, "1M: Past High Bars",  group="過去バー数")
pl1M = input.int(20, "1M: Past Low Bars",   group="過去バー数")
ph1W = input.int(20, "1W: Past High Bars",  group="過去バー数")
pl1W = input.int(20, "1W: Past Low Bars",   group="過去バー数")
ph1D = input.int(20, "1D: Past High Bars",  group="過去バー数")
pl1D = input.int(20, "1D: Past Low Bars",   group="過去バー数")
ph4H = input.int(20, "4H: Past High Bars",  group="過去バー数")
pl4H = input.int(20, "4H: Past Low Bars",   group="過去バー数")
ph1H = input.int(20, "1H: Past High Bars",  group="過去バー数")
pl1H = input.int(20, "1H: Past Low Bars",   group="過去バー数")
ph15 = input.int(20, "15m: Past High Bars", group="過去バー数")
pl15 = input.int(20, "15m: Past Low Bars",  group="過去バー数")
ph5  = input.int(20, "5m: Past High Bars",  group="過去バー数")
pl5  = input.int(20, "5m: Past Low Bars",   group="過去バー数")
ph1  = input.int(20, "1m: Past High Bars",  group="過去バー数")
pl1  = input.int(20, "1m: Past Low Bars",   group="過去バー数")

// === ライン保持用 ===
var line h12  = na
var line l12  = na
var line h1M  = na
var line l1M  = na
var line h1W  = na
var line l1W  = na
var line h1D  = na
var line l1D  = na
var line h4H  = na
var line l4H  = na
var line h1H  = na
var line l1H  = na
var line h15  = na
var line l15  = na
var line h5   = na
var line l5   = na
var line h1   = na
var line l1   = na

// === 多時間足処理 ===
// 12M
if show_12M
    hv = request.security(syminfo.tickerid, "12M", ta.highest(high, ph12))
    lv = request.security(syminfo.tickerid, "12M", ta.lowest(low,  pl12))
    hb = request.security(syminfo.tickerid, "12M", ta.highestbars(high, ph12))
    lb = request.security(syminfo.tickerid, "12M", ta.lowestbars(low,  pl12))
    if not na(hv) and not na(lv)
        xh = bar_index - ph12 + hb
        xl = bar_index - pl12 + lb
        if not na(h12)
            line.delete(h12)
        if not na(l12)
            line.delete(l12)
        h12 := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.red, width=1, extend=extend.right)
        l12 := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.red, width=1, extend=extend.right)

// 1M
if show_1M
    hv = request.security(syminfo.tickerid, "1M", ta.highest(high, ph1M))
    lv = request.security(syminfo.tickerid, "1M", ta.lowest(low,  pl1M))
    hb = request.security(syminfo.tickerid, "1M", ta.highestbars(high, ph1M))
    lb = request.security(syminfo.tickerid, "1M", ta.lowestbars(low,  pl1M))
    if not na(hv) and not na(lv)
        xh = bar_index - ph1M + hb
        xl = bar_index - pl1M + lb
        if not na(h1M)
            line.delete(h1M)
        if not na(l1M)
            line.delete(l1M)
        h1M := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.orange, width=1, extend=extend.right)
        l1M := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.orange, width=1, extend=extend.right)

// 1W
if show_1W
    hv = request.security(syminfo.tickerid, "1W", ta.highest(high, ph1W))
    lv = request.security(syminfo.tickerid, "1W", ta.lowest(low,  pl1W))
    hb = request.security(syminfo.tickerid, "1W", ta.highestbars(high, ph1W))
    lb = request.security(syminfo.tickerid, "1W", ta.lowestbars(low,  pl1W))
    if not na(hv) and not na(lv)
        xh = bar_index - ph1W + hb
        xl = bar_index - pl1W + lb
        if not na(h1W)
            line.delete(h1W)
        if not na(l1W)
            line.delete(l1W)
        h1W := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.teal, width=1, extend=extend.right)
        l1W := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.teal, width=1, extend=extend.right)

// 1D
if show_1D
    hv = request.security(syminfo.tickerid, "1D", ta.highest(high, ph1D))
    lv = request.security(syminfo.tickerid, "1D", ta.lowest(low,  pl1D))
    hb = request.security(syminfo.tickerid, "1D", ta.highestbars(high, ph1D))
    lb = request.security(syminfo.tickerid, "1D", ta.lowestbars(low,  pl1D))
    if not na(hv) and not na(lv)
        xh = bar_index - ph1D + hb
        xl = bar_index - pl1D + lb
        if not na(h1D)
            line.delete(h1D)
        if not na(l1D)
            line.delete(l1D)
        h1D := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.green, width=1, extend=extend.right)
        l1D := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.green, width=1, extend=extend.right)

// 4H (240)
if show_4H
    hv = request.security(syminfo.tickerid, "240", ta.highest(high, ph4H))
    lv = request.security(syminfo.tickerid, "240", ta.lowest(low,  pl4H))
    hb = request.security(syminfo.tickerid, "240", ta.highestbars(high, ph4H))
    lb = request.security(syminfo.tickerid, "240", ta.lowestbars(low,  pl4H))
    if not na(hv) and not na(lv)
        xh = bar_index - ph4H + hb
        xl = bar_index - pl4H + lb
        if not na(h4H)
            line.delete(h4H)
        if not na(l4H)
            line.delete(l4H)
        h4H := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.blue, width=1, extend=extend.right)
        l4H := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.blue, width=1, extend=extend.right)

// 1H (60)
if show_1H
    hv = request.security(syminfo.tickerid, "60", ta.highest(high, ph1H))
    lv = request.security(syminfo.tickerid, "60", ta.lowest(low,  pl1H))
    hb = request.security(syminfo.tickerid, "60", ta.highestbars(high, ph1H))
    lb = request.security(syminfo.tickerid, "60", ta.lowestbars(low,  pl1H))
    if not na(hv) and not na(lv)
        xh = bar_index - ph1H + hb
        xl = bar_index - pl1H + lb
        if not na(h1H)
            line.delete(h1H)
        if not na(l1H)
            line.delete(l1H)
        h1H := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.navy, width=1, extend=extend.right)
        l1H := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.navy, width=1, extend=extend.right)


// 15m
if show_15m
    hv = request.security(syminfo.tickerid, "15", ta.highest(high, ph15))
    lv = request.security(syminfo.tickerid, "15", ta.lowest(low,  pl15))
    hb = request.security(syminfo.tickerid, "15", ta.highestbars(high, ph15))
    lb = request.security(syminfo.tickerid, "15", ta.lowestbars(low,  pl15))
    if not na(hv) and not na(lv)
        xh = bar_index - ph15 + hb
        xl = bar_index - pl15 + lb
        if not na(h15)
            line.delete(h15)
        if not na(l15)
            line.delete(l15)
        h15 := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.purple, width=1, extend=extend.right)
        l15 := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.purple, width=1, extend=extend.right)

// 5m
if show_5m
    hv = request.security(syminfo.tickerid, "5", ta.highest(high, ph5))
    lv = request.security(syminfo.tickerid, "5", ta.lowest(low,  pl5))
    hb = request.security(syminfo.tickerid, "5", ta.highestbars(high, ph5))
    lb = request.security(syminfo.tickerid, "5", ta.lowestbars(low,  pl5))
    if not na(hv) and not na(lv)
        xh = bar_index - ph5 + hb
        xl = bar_index - pl5 + lb
        if not na(h5)
            line.delete(h5)
        if not na(l5)
            line.delete(l5)
        h5 := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.gray, width=1, extend=extend.right)
        l5 := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.gray, width=1, extend=extend.right)

// 1m
if show_1m
    hv = request.security(syminfo.tickerid, "1", ta.highest(high, ph1))
    lv = request.security(syminfo.tickerid, "1", ta.lowest(low,  pl1))
    hb = request.security(syminfo.tickerid, "1", ta.highestbars(high, ph1))
    lb = request.security(syminfo.tickerid, "1", ta.lowestbars(low,  pl1))
    if not na(hv) and not na(lv)
        xh = bar_index - ph1 + hb
        xl = bar_index - pl1 + lb
        if not na(h1)
            line.delete(h1)
        if not na(l1)
            line.delete(l1)
        h1 := line.new(x1=xh, y1=hv, x2=xh+1, y2=hv, color=color.black, width=1, extend=extend.right)
        l1 := line.new(x1=xl, y1=lv, x2=xl+1, y2=lv, color=color.black, width=1, extend=extend.right)
